{"ast":null,"code":"var _jsxFileName = \"/Users/ericgorza/Desktop/little-lemon-final/Little-Lemon-Capstone/src/components/pages/BookingPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport BookingForm from \"../BookingForm\";\nimport Spacer from \"../Spacer-footer\";\nimport { useState, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction updateTimes(selectedDate) {\n  // Implemente a lógica para retornar os horários disponíveis com base na data\n  return ['10:00 AM', '12:00 PM', '2:00 PM', '4:00 PM', '6:00 PM', '8:00 PM'];\n}\n\n// Função para inicializar os horários disponíveis\nfunction initializeTimes() {\n  return ['10:00 AM', '12:00 PM', '2:00 PM', '4:00 PM', '6:00 PM', '8:00 PM'];\n}\nconst BookingPage = () => {\n  _s();\n  const [availableTimes, dispatch] = useReducer(updateTimes, [], initializeTimes);\n  const [selectedDate, setSelectedDate] = useState(''); // Adicione o estado para a data selecionada\n\n  const handleDateChange = e => {\n    const newDate = e.target.value;\n    setSelectedDate(newDate);\n    dispatch(newDate); // Disparar a mudança de estado com a nova data selecionada\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDate,\n      onChange: handleDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BookingForm, {\n      availableTimes: availableTimes,\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(BookingPage, \"wrCN6F4ND2fe8Q8PTYEGI4Fpb/A=\");\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","BookingForm","Spacer","useState","useReducer","jsxDEV","_jsxDEV","Fragment","_Fragment","updateTimes","selectedDate","initializeTimes","BookingPage","_s","availableTimes","dispatch","setSelectedDate","handleDateChange","e","newDate","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/ericgorza/Desktop/little-lemon-final/Little-Lemon-Capstone/src/components/pages/BookingPage.js"],"sourcesContent":["import React from \"react\";\nimport BookingForm from \"../BookingForm\";\nimport Spacer from \"../Spacer-footer\";\nimport { useState, useReducer } from 'react';\n\nfunction updateTimes(selectedDate) {\n    // Implemente a lógica para retornar os horários disponíveis com base na data\n    return [\n      '10:00 AM',\n      '12:00 PM',\n      '2:00 PM',\n      '4:00 PM',\n      '6:00 PM',\n      '8:00 PM',\n    ];\n  }\n\n// Função para inicializar os horários disponíveis\nfunction initializeTimes() {\n    return [\n      '10:00 AM',\n      '12:00 PM',\n      '2:00 PM',\n      '4:00 PM',\n      '6:00 PM',\n      '8:00 PM',\n    ];\n  }\n\n\n\nconst BookingPage = () => {\n\n    const [availableTimes, dispatch] = useReducer(updateTimes, [], initializeTimes);\n    const [selectedDate, setSelectedDate] = useState(''); // Adicione o estado para a data selecionada\n\n    const handleDateChange = (e) => {\n        const newDate = e.target.value;\n        setSelectedDate(newDate);\n        dispatch(newDate); // Disparar a mudança de estado com a nova data selecionada\n      };\n\n    return (\n        <>\n            <Spacer/>\n            <input\n                type=\"date\"\n                value={selectedDate}\n                onChange={handleDateChange}\n            />\n            <BookingForm availableTimes={availableTimes} dispatch={dispatch}/>\n        </>\n    )\n}\n\nexport default BookingPage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,WAAWA,CAACC,YAAY,EAAE;EAC/B;EACA,OAAO,CACL,UAAU,EACV,UAAU,EACV,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;AACH;;AAEF;AACA,SAASC,eAAeA,CAAA,EAAG;EACvB,OAAO,CACL,UAAU,EACV,UAAU,EACV,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV;AACH;AAIF,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,MAAM,CAACC,cAAc,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACK,WAAW,EAAE,EAAE,EAAEE,eAAe,CAAC;EAC/E,MAAM,CAACD,YAAY,EAAEM,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BL,eAAe,CAACG,OAAO,CAAC;IACxBJ,QAAQ,CAACI,OAAO,CAAC,CAAC,CAAC;EACrB,CAAC;;EAEH,oBACIb,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTpB,OAAA;MACIqB,IAAI,EAAC,MAAM;MACXN,KAAK,EAAEX,YAAa;MACpBkB,QAAQ,EAAEX;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFpB,OAAA,CAACL,WAAW;MAACa,cAAc,EAAEA,cAAe;MAACC,QAAQ,EAAEA;IAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACpE,CAAC;AAEX,CAAC;AAAAb,EAAA,CAtBKD,WAAW;AAAAiB,EAAA,GAAXjB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}